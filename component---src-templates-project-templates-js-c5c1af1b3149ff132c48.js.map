{"version":3,"sources":["webpack:///./src/templates/projectTemplates.js","webpack:///./node_modules/core-js/modules/_string-html.js","webpack:///./src/components/header.jsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./node_modules/core-js/modules/es6.string.link.js"],"names":["Template","dir","markdownRemark","data","frontmatter","html","Fragment","className","src","img","alt","title","dangerouslySetInnerHTML","__html","target","href","link","pageQuery","$export","fails","defined","quot","createHTML","string","tag","attribute","value","S","String","p1","replace","module","exports","NAME","exec","O","P","F","test","toLowerCase","split","length","Header","props","openSidebar","setState","menuLeft","closeSidebar","state","render","style","left","this","onClick","e","srcSet","to","rel","srcset","Component","loader","enqueue","React","createContext","m","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json","url"],"mappings":"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","file":"component---src-templates-project-templates-js-c5c1af1b3149ff132c48.js","sourcesContent":["import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport Header from \"../components/header\"\r\n\r\nexport default function Template({\r\n  data, // this prop will be injected by the GraphQL query below.\r\n}) {\r\n  let dir = \"https://atndesign.github.io/1Day1Code\"\r\n  const { markdownRemark } = data // data.markdownRemark holds your post data\r\n  const { frontmatter, html } = markdownRemark\r\n  return (\r\n    <React.Fragment>\r\n      <Header />\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 project__img-container\">\r\n          <img\r\n            className=\"project__img img-fluid\"\r\n            src={dir + frontmatter.img}\r\n            alt=\"cover\"\r\n          ></img>\r\n        </div>\r\n        <div className=\"col-md-6 project__content\">\r\n          <h1 className=\"project__title\">{dir + frontmatter.title}</h1>\r\n          {/* <h2 className=\"project__date\">{frontmatter.date}</h2> */}\r\n          <div\r\n            className=\"project__content\"\r\n            dangerouslySetInnerHTML={{ __html: html }}\r\n          />\r\n          <div className=\"btn__container\">\r\n            <a\r\n              target=\"_blank\"\r\n              href={dir + frontmatter.link}\r\n              className=\"btn project__btn\"\r\n            >\r\n              Demo\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query($path: String!) {\r\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\r\n      html\r\n      frontmatter {\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        path\r\n        title\r\n        img\r\n        link\r\n      }\r\n    }\r\n  }\r\n`\r\n","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n","import React, { Component } from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      menuLeft: -500,\r\n    }\r\n  }\r\n\r\n  openSidebar = () => {\r\n    this.setState({ menuLeft: 0 })\r\n  }\r\n  closeSidebar = () => {\r\n    this.setState({ menuLeft: -500 })\r\n  }\r\n\r\n  render() {\r\n    let dir = \"https://atndesign.github.io/1Day1Code\"\r\n    return (\r\n      <header className=\"header\">\r\n        <div\r\n          style={{ left: +this.state.menuLeft + \"px\" }}\r\n          className=\"sidebar mobile-only\"\r\n        >\r\n          <button className=\"sidebar-cross\" onClick={e => this.closeSidebar()}>\r\n            <img\r\n              srcSet={dir + \"/img/cross.svg\"}\r\n              src={dir + \"/img/cross.png\"}\r\n              alt=\"cross\"\r\n            />\r\n          </button>\r\n          <ul className=\"nav__list\">\r\n            <li className=\"list__item\">\r\n              <Link to=\"/\">Home</Link>\r\n            </li>\r\n            <li className=\"list__item\">\r\n              <Link to=\"/projects/\">Projects</Link>\r\n            </li>\r\n            <li className=\"list__item\">\r\n              <a\r\n                target=\"_blank\"\r\n                rel=\"nooppener\"\r\n                href=\"https://kmoulun.gitlab.io/moulunkevin/\"\r\n              >\r\n                Contact\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <button\r\n          className=\"sidebar-toggler mobile-only\"\r\n          onClick={e => this.openSidebar()}\r\n        >\r\n          <img src={dir + \"/img/menu.svg\"} alt=\"menu toggler\" />\r\n        </button>\r\n        <img\r\n          srcset={dir + \"/img/logo.svg\"}\r\n          src={dir + \"/img/logo.png\"}\r\n          alt=\"logo\"\r\n          className=\"logo\"\r\n        />\r\n        <nav className=\"header__nav desktop-only\">\r\n          <ul className=\"nav__list\">\r\n            <li className=\"list__item\">\r\n              <Link to=\"/\">Home</Link>\r\n            </li>\r\n            <li className=\"list__item\">\r\n              <Link to=\"/projects/\">Projects</Link>\r\n            </li>\r\n            <li className=\"list__item\">\r\n              <a target=\"_blank\" href=\"https://kmoulun.gitlab.io/moulunkevin/\">\r\n                About me\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </header>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n"],"sourceRoot":""}